<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title Unstoppable Website
    %meta{:content => "", :name => "description"}/
    %meta{:content => "Bogdan Gusiev", :name => "author"}/
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %meta{:content => "black-translucent", :name => "apple-mobile-web-app-status-bar-style"}/
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no", :name => "viewport"}/
    %link{rel: "stylesheet", href: "https://cdn.jsdelivr.net/gh/hakimel/reveal.js/plugin/highlight/zenburn.css", id: "highlight-theme"}
    %link{:href => "https://cdn.jsdelivr.net/gh/hakimel/reveal.js/dist/reveal.css", :rel => "stylesheet"}/
    %link{:href => "https://cdn.jsdelivr.net/gh/hakimel/reveal.js/dist/theme/white.css", :rel => "stylesheet"}/
    %script{src: 'https://cdn.jsdelivr.net/gh/hakimel/reveal.js/plugin/highlight/highlight.js'}
    %script{src: 'https://cdn.jsdelivr.net/gh/highlightjs/highlightjs-solidity/solidity.js'}

    %script

    / If the query includes 'print-pdf', use the PDF print sheet
    :javascript
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = "https://revealjs.com/css/print/" + (window.location.search.match( /print-pdf/gi ) ? 'pdf.css' : 'paper.css');
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    :sass
      body .reveal
        font-size: 30px !important
      .reveal
        section
          pre
            code
              padding: 20px 5px
              font-size: 1.30em
              line-height: 1.3em
          ul
            min-width: 50%
          .grey
            color: grey
          .red
            color: #e02c2d
          .green
            color: #17cc1e
          .yellow
            color: yellow
          .orange
            color: orange
          .blue
            color: #1b91ff
          .left
            float: left
          .right
            float: right
          .clearfix
            overflow: hidden
          table.full-border
            border-collapse: collapse
            td
              border: 1px solid black !important
          img
            border: 0px
            box-shadow: 0 0 0 0
      
          code
            &.line-numbers
              counter-reset: line_numbers
            span
              &.line-number
                counter-increment: line_numbers
                margin-right: 1em
                &:before
                  content: counter(line_numbers, decimal-leading-zero)
                  color: gray
              &.highlight-line:before
                color: yellow
          
        
  %body
    .reveal
      .slides
        %section
          %h1
            UNS Registry
          %h1
            Q3 2021
        %section
          %h2 High Level Changes

          :markdown
            * No Resolvers
            * No Subdomains
            * Proxy Upgradable
            * Shared CNS/UNS infrastructure
              * Minting Manager (TLDs)
              * Proxy Reader
            * Owner Multisig
            * New Meta transactions
            * Gas Efficiency
        %section
          %h2 No Resolvers
          
          %p
            %a{target: '_blank', href: "https://github.com/unstoppabledomains/uns/blob/main/contracts/Registry.sol"} Registry.sol
          :markdown
            * Motivation
              * Any feature can be done via custody contract
              * Gas Efficincy
            * Implementation
              * Registry acts as Resolver
              * Registry implements records management/reading API
          
          %pre
            %code.solidity
              :preserve
                contract Registry {
                  function resolverOf(uint256 tokenId) {
                    return _exists(tokenId) ? address(this) : address(0x0);
                  }
                }
          
        %section
          %h2 Compatibility

          %pre
            %code.javascript
              :preserve
                const resolverAddress = registry.resolverOf(tokenId)
                if (resolverAddress === '0x000000') {
                  registry.resolveTo(tokenId, defaultResolverAddress);
                }

                resolver = new ResolverContract(
                  resolverAddress || defaultResolverAddress
                );

                resolver.getMany(
                  ['crypto.ETH.address', 'crypto.ZIL.address']
                );
                resolver.setMany(['dweb.ipfs.hash', '....']);
        %section
          %h2 Merging contract into main contracts

          :markdown
            * Registry serves as:
              * Resolver
              * SignatureController
            * MintingManager serves as:
              * MintingController
              * WhitelistedMinter
              * FreeMinter
              * URIPrefixController

        %section
          %h2 Events
          :markdown
            * `event Approved ApprovedForAll Transfer NewURI`
              * Unchanged
            * `event Resolve Sync`
              * Removed
            * `event Set NewKey ResetRecords`
              * Moved from Resolver to Registry
              * ResetRecords now fires when records are reset on transfer.
        %section
          %h2 No Subdomains

          %ol
            %li Subdomains are removed with no replacement
            %li We can add them later in some form
        %section
          %h2 Proxy Upgradable

          %ul
            %li Registry is temporary upgradable
            %li 
              We are free to add new features like 
              %ul
                %li Reverse Resolution
                %li Subdomains
                %li Bulk operations
        %section
          %h2 How it works?

          %ul
            %li It is a mad solidity hack
            %li It is well adopted by community
            %li 
              %a{target: '_blank', href: "https://eips.ethereum.org/EIPS/eip-1822"} EIP-1822
            %li Etherscan has custom features for it

          %img{src: "https://mvpworkshop.co/wp-content/uploads/2021/03/image.png"}    
          %p
            Reading: 
            %a{target: '_blank', href: 'https://mvpworkshop.co/blog/upgradeable-smart-contracts-proxy-pattern/'} https://mvpworkshop.co/blog/upgradeable-smart-contracts-proxy-pattern/

        %section
          %h2 Post-Release upgrades for Registry
          %ul
            %li 
              Add features, fix bugs
              %ul
                %li Until we deny ourselves this possibility

            %li 
              24K size limit
              %ul
                %li we used 19K ~79%
        %section
          %h2 Minting Manager


          %p Overcomes WhitelistedMinter
          %p
            %a{target: '_blank', href: "https://github.com/unstoppabledomains/uns/blob/main/contracts/MintingManager.sol"} MintingManager.sol

          %ul
            %li TLDs support
            %li Mints on CNS or UNS based on TLD
            %li Same Close/Rotation Interface
            %li Same Worker Addresses
            %li Free Minter functionality
            %li Upgradable
        %section
          %h2 Proxy Reader
          
          %p
            %a{target: '_blank', href: "https://github.com/unstoppabledomains/uns/blob/main/contracts/ProxyReader.sol"} ProxyReader.sol
          %pre
            %code.solidity
              :preserve
                contract ProxyReader {
                  function balanceOf(address owner) returns (uint256) {
                    return _unsRegistry.balanceOf(owner) + 
                      _cnsRegistry.balanceOf(owner);
                  }     

                  function resolverOf(uint256 tokenId) returns (address) {
                    if(_unsRegistry.exists(tokenId)) {
                        return _unsRegistry.resolverOf(tokenId);
                    } else {
                        return _cnsRegistry.resolverOf(tokenId);
                    }
                  }
                }
        %section
          %h2 New Meta Transactions

          
          %p
            %a{target: '_blank', href: "https://github.com/unstoppabledomains/uns/blob/main/contracts/metatx/RegistryForwarder.sol"} RegistryForwarder.sol

          :markdown
            * Old Metatransactions are still working
              * SignatureController => Registry
            * New Metatransactions are comming

          .fragment
            %pre
              %code.solidity
                :preserve
                  struct ForwardRequest {
                    address from;
                    uint256 gas; // gas limit
                    uint256 tokenId;
                    uint256 nonce;
                    // abi.encodeWithSelector(
                    //  bytes4(keccak256('setMany(string[],string[],uint256)')), 
                    //  keys, values, tokenId
                    // )
                    bytes data;
                  }
                  function execute(
                    ForwardRequest req, bytes signature
                  ) public returns (bool success, bytes memory returndata);

                
        %section
          %h2 Owner Multisig

          %p All maitanance operations are now done by the same multisig wallet
          %ol
            %li Upgrade Registry
            %li 
              Manage Minting Manager
              %ol
                %li Upgrading
                %li Add TLDs
                %li Add Worker Accounts
                %li Set Token URI prefix
                %li Set Default Resolver Address (only CNS)
        %section
          %h2 Bonus: Gas Usage Improvment

          %ul
            %li 
              Cheaper gas on critical operations
              %ul
                %li.green &#x2193; Set Records
                %li.green &#x2193; Minting 
                %li.red &#x2191; Transfer
                %li.red &#x2191; Burn 
            %li
              Estimation comming soon


        %section
          %h2 High Level Design
          %img{src: "https://api.monosnap.com/file/download?id=vfNJuAYN7ZrR9wTJoidU7GzPnzUgTP"}
 
            
    %script{:src => "https://cdn.jsdelivr.net/gh/hakimel/reveal.js/dist/reveal.js"}
    :javascript
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      	controls: true,
      	progress: true,
      	history: true,
      	center: true,
        plugins: [RevealHighlight],

      	theme: 'simple', // available themes are in /css/theme
      	transition: 'fade', // default/cube/page/concave/zoom/linear/fade/none

      	// Optional libraries used to extend on reveal.js
      	dependencies: [
      		// { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          //{ src: 'https://cdn.jsdelivr.net/gh/hakimel/reveal.js/plugin/highlight/highlight.js', async: true},
          {src: 'https://mikemiles86.github.io/reveal-line-numbers/plugin/line-numbers/line-numbers.js'},
          
          { src: 'https://rawgithub.com/hakimel/reveal.js/3.6.0/plugin/notes/notes.js', async: true }
      		// { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      		// { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
      		// { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      	]
      });
      Reveal.getPlugin('highlight').hljs.registerLanguage('solidity', window.hljsDefineSolidity);
