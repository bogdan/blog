<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title Code Review
    %meta{:content => "", :name => "description"}/
    %meta{:content => "Bogdan Gusiev", :name => "author"}/
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %meta{:content => "black-translucent", :name => "apple-mobile-web-app-status-bar-style"}/
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no", :name => "viewport"}/
    %link{:href => "http://lab.hakim.se/reveal-js/css/reveal.css", :rel => "stylesheet"}/
    %link{:href => "https://rawgithub.com/hakimel/reveal.js/master/css/theme/white.css", :rel => "stylesheet"}/
    / For syntax highlighting
    %link{:href => "http://lab.hakim.se/reveal-js/lib/css/zenburn.css", :rel => "stylesheet"}/
    / If the query includes 'print-pdf', use the PDF print sheet
    :javascript
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = "https://revealjs.com/css/print/" + (window.location.search.match( /print-pdf/gi ) ? 'pdf.css' : 'paper.css');
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    :sass
      body .reveal
        font-size: 30px !important
      .yellow
        color: yellow
      .reveal
        section
          pre
            code
              padding: 20px 5px
              font-size: 1.30em
              line-height: 1.3em
          ul
            min-width: 50%
          .red
            color: #e02c2d
          .green
            color: #17cc1e
          .yellow
            color: yellow
          .blue
            color: #1b91ff
          .left
            float: left
          .right
            float: right
          .clearfix
            overflow: hidden
          table.full-border
            border-collapse: collapse
            td
              border: 1px solid black !important
          img
            border: 0px
            box-shadow: 0 0 0 0
      
          
        
  %body
    .reveal
      .slides
        %section
          %h1
            Code Review Process
          %h2
            Bogdan Gusiev
        -#%section
          %h2
            Bogdan G.
          %ul
            %li is 9 years in IT
            %li
              6 years with Ruby and Rails
              %ul
                %li Long Run Rails Contributor
        -#%section
          %h1
            Some of my gems
          %ul
            %li
              %a{:href => "http://github.com/bogdan"} http://github.com/bogdan
              %ul
                %li
                  %a{:href => "https://github.com/bogdan/datagrid"} datagrid
                %li
                  %a{:href => "https://github.com/railsware/js-routes"} js-routes
                %li
                  %a{:href => "https://github.com/bogdan/accepts_values_for"} accepts_values_for
                %li
                  %a{:href => "https://github.com/bogdan/furi"} furi
        -#%section
          %h2
            My Blog
          %h2
            %a{:href => "http://gusiev.com"} http://gusiev.com
        -#%section
          %h1
            %a{:href => "http://talkable.com"}
              %img{:alt => "Talkable", style: '', :src => "http://d2jjzw81hqbuqv.cloudfront.net/assets/static/logo-dark-large.png"}/
          %ul
            %li
              7 years old startup
            %li
              A lot of code
            %li
              Rails version from 2.0 to 5.1
        %section
          %h2 Code review tends to be natural

          %img{src: 'http://s2.quickmeme.com/img/f0/f05b72bc2a08d7c684443ef10ad2e7ed57d37f57e33af30dbb7dab534399a811.jpg'}
        %section
          %h2 Code Review yourself
          %img{src: 'http://www.globalnerdy.com/wordpress/wp-content/uploads/2011/10/its-working.jpg'}
        %section
          %h2 Asking for help

          %img{src: "https://www.visa.com.au/partner-with-us/developer/_jcr_content/par/cardstack_255835962/cardStackColumn3/image.img.jpg/1496038571257.jpg"}
        %section
          %h3 Spondanuous code review problem:
          %h2 Too Late
          %img{src: "https://i.ytimg.com/vi/M6OcklRigfs/hqdefault.jpg"}

        %section

          %h2 Everything had changed by
          %h1 GitHub

        %section
          %h2 Do I need a code review?
          %h3 IMHO: new projects 
          %h3 don't need a formal code review at all

        %section
          %h3 Code Review Evolution
          %ol
            %li Spontanuous Code Reviews
            %li "When I am not sure" code reviews
            %li Formal Code Review Process
            %li Required code review for certain changes
            %li Required code reviews for everything

          %p.fragment Fails Driven Process
        %section
          %h2 Code Review Properties

          %h4 Necessity
          %ul
            %li Optional
            %li Required
          %h4 Process
          %ul
            %li Informal
            %li Formal
          %h4 People
          %ul
            %li Dedicated
            %li Distributed

        %section
          %h2 Position in a process

          %ol
            %li Planning
            %li Coding
            %li Code Review
            %li QA
            %li Release

          %p.fragment QA &lt;-&gt; Code Review
          %p.fragment Formally QA after Code Review

        %section
          %ol
            %li Make a fork (optional)
            %li Create a Branch
            %li Open a Pull Request
            %li Wait for review
            %li 
              .green Discuss &amp; Fix
            %li Merge
        %section
          %h2
            Code Review is 
          %h4 
            a process of 
            %span.green reviewing and approving 
            code changes 
            %br
            %span.red before 
            they get accepted to the mainstream
        %section
          %h3 How to review?
          
          %img{src: "https://monosnap.com/file/jza1K5VEcJidIyiaz9O80XKHaLUKk5.png"}
          -#%pre
            %code.diff
              :preserve
                + def aa        
                + end
                # whitespace demo diff

                img

        %section
          %h2 Fix common things first?

          %ul
            %li Typos
            %li Whitespace
            %li Code Style
          
          %p.fragment Wrong Direction!

        %section
          %h2 Where to look?

          %p
            Things that are 
            %span.green most significant 
            should be reviewed first
          %p.fragment
            which are ones that are the most 
            %span.red hard to change.

        %section
          %h2 Top to Bottom Code Review 

          %ol
            %li 
              Architecture
              %ol
                %li Problem Solution
                %li Public APIs
                %li Database Schema
                %li Object Oriented Design
                %li Public Method Signatures
            %li.fragment 
              Implementation
              %ol
                %li Classes &amp; Methods 
                %li Views
                %li Tests
                %li Code Style, Typos, Whitespace
        %section
          %h2 Problem Solution
          %ol
            %li Problem makes sense
            %li Problem Solved
            %li High Level Security
            %li High Level Performance
        %section

          %h4 Only show product categories with at least one product 
          %h4 in the select box

          %pre
            %code.diff
              :preserve
                def selectable_product_categories
                +  ProductCategory.with_at_least_one_product
                -  ProductCategory.all
                end

          %pre.fragment
            %code.ruby
              :preserve
                ProductCategory.
                  where("not exists(select * from products where ...)").
                  count # => 0
          
        %section
          %h2 High Level Security

          %h3 Ex. Feature: 
          %h4 Login user automatically when it clicks on the link in the email
          %h3.fragment This is not very secure

        %section
          %h2 High Level Performance:
          %h3 Is there a way to even make this feature fast?
          %ul.fragment
            %li 
              Touches performance 
              %span.red sensitive code
            %li 
              Will be slow for 
              %span.red particular data
              %ul
                %li No pagination when there are 1000+ records to display
        %section
          %h2 Public APIs
          %h3 Using HTTP API as example
          %ol
            %li.red Efficiency
            %li Logical Endpoints
            %li Request Parameters
            %li Response Format
          %br
          %br
          %h4.fragment Whatever that is documented
        %section
          %h2 API inefficiency example
          %pre
            %code.ruby
              :preserve
                Purchase.has_one :referral
          %p How do I approve the referral when I have a Purchase#order_number?
          .fragment
            %pre
              %code
                :preserve
                  GET /purchases/:order_number
                    {
                      id: 1,
                      order_number: '1838382',
                      referral_id: 17
                    }

                  POST  /referrals/:id/approve
            %h3 Efficient Way?
          %pre.fragment
            %code.less
              :preserve
                POST /purchases/:order_number/referral/approve
        %section
          %h3 Response Format
          %pre
            %code.ruby
              :preserve
                # Easier
                render json: @campaign.view_setups.to_json
                # Extensible
                render json: {view_setups: @campaign.view_setups.to_json}
        %section
          %h2 Bad API Example
            
          %pre
            %code.js
              :preserve
                Talkable.publish('talkable_offer_close', null, true);
          %pre.fragment
            %code.js
              :preserve
                Talkable.publish('offer_close', null, true);
            
        %section
          %h2 Analyze usage first 
          %h3 but not implementation

          %pre
            %code.js
              :preserve
                setCustomProperty: function (person, properties) {
                  ...
                }
                setCustomProperty('advocate', {key: value})
                setCustomProperty('friend',   {key: value})
          %pre.fragment
            %code.js
              :preserve
                setAdvocateCustomProperty: function(properties) {
                  private_stuff.setCustomProperty("advocate", properties);
                },

                setFriendCustomProperty: function(properties) {
                  private_stuff.setCustomProperty("friend", properties);
                },
        %section
          %h2 Database Schema

          %ol
            %li Relations between tables
            %li Data Columns
            %li Naming
          
        %section
          %h3 Efficient Relations

          %ol
            %li What are the variants?
            %li Was the best one selected?
          %p
            %img{src: "http://support.smartbear.com/support/media/images/support/kb/data/2011/1/31/info-database-schema.jpg", style: 'height: 300px'}

               
        %section

          %h3 Efficient schema

          %pre
            %code.ruby
              :preserve
                add_column :images, :dimension, :string

                class Image &lt; AR::Base
                  def width
                    dimension.split("x").first
                  end
                  def height
                    dimension.split("x").last
                  end
                end
          %pre.fragment
            %code.ruby
              :preserve
                add_column :images, :width, :integer
                add_column :images, :height, :integer
        %section
          %h3 
            Data should be 
            %span.green easy to read 
          %h3.fragment 
            even if it makes it 
            %span.red harder to write
          %h3.fragment
            Database schema change 
            %br 
            can be one of the hardest ones
        %section
          %h2 Object Oriented Design
          %ol
            %li 
              Reflects Real World
              %ul
                %li Classes correspond to the real interactions that happen
            %li 
              Inheritance
              %ul
                %li Classes are inherited correctly

            %li.red Constructors
        %section
          %h2 Reflects Real World

          %h3 Inheritance done right
        %section
          %h2 Reviewing constructors
          %h3 Circular Dependency

          %pre
            %code.ruby
              :preserve
                class Field
                  def initialize
                    @cells = Array.new(10) do
                      Array.new(10) { Cell.new(self) }
                    end
                  end
                end
                class Cell
                  def initialize(field)
                    @field = field
                  end
                end
        %section
          %h2 Class constructor answers to:

          %ul
            %li Which things are required to use an object?
            %li 
              What are the object responsibilities?
              %ul
                %li Theoretical limit
            %li Which methods can be implemented in the object?
            %li 
              Which things would need to be passed to methods as arguments?
              %ul
                %li Constructor defines object API

        %section
          %h2 Reviewing Constructors
          %h3 Undefined Context

          %pre
            %code.ruby
              :preserve
                class ApplicationController
                  before_action do
                    WhateverRequestAnalyzer.new(request).analyze
                  end
                end
          %pre.fragment
            %code.ruby
              :preserve
                ConcreteRequestAnalyzer.new(
                  request.user_agent, request.url, request.content_type
                ).analyze
        %section
          %h2 Public Method Signatures
          %ol
            %li Placement
            %li Arguments
            %li Name
        %section
          %h2 Method Placement

          %pre
            %code.ruby
              :preserve
                class User
                  def approve!(referral)
                end
                # OR
                class Referral
                  def approve!(user)
                end
        %section
          %h2 Method Arguments
          %pre
            %code.js
              :preserve
                this.extractUserData(this.data)
          %pre
            %code.js
              :preserve
                renderFeedbackForm(user, user.role)
                
        %section
          %h1 Implementation
        %section
          %h2 Classes &amp; Method Bodies

          %p Each method or class separately
          %p Check one by one:
          %ol
            %li Approach &amp; Algorithm
            %li Performance
            %li Security
            %li Minimalism
            %li Local Variable Names

        %section
          %h2 Performance &amp; Vulnerabilities

          %p 
            In the ideal world performance and vulnerabilities 
            %br
            should not change the code structure.
          
          %p.fragment 
            In practice it can but we should try hard 
            %br
            to fix performance problems only at the implementation level

        %section
          %h3 Good Performance Patch
          %pre
            %code.diff
              :preserve
                 def core_options
                -  { header: name, description: description, group: group }
                +  @core_options ||= { header: name, description: description, group: group }
                 end
          %pre
            %code.diff
              :preserve
                - @campaign.locale_entries.each do
                + @campaign.locale_entries.preload(:variants).each do

            
        %section
          %h3 Good Vulnerability Patch

          %pre
            %code.diff
              :preserve
                -&lt;%= advocate_info.first_name %&gt;
                +&lt;%= escape(advocate_info.first_name) %&gt;
        %section
          %h1 Security
          %ul
            %li 
              General Approach Security
              %ul
                %li Is it secure to have this feature?
                %li Is it secure to implement the feature this way?
            %li.fragment 
              Implementation Vulnerabilities 
              %ul
                %li XSS
                %li Allowed Parameters
                %li Backend Authorisation check
                %li Authorisation for UI elements
        %section
          %h2 Tests

          %ol
            %li.red Use Cases Coverage
            %li Formal Code Coverage
            %li Tests Implementation
        %section
          %h2 Top to bottom Idea
          
          %h3 It is bad to:

          %ul
            %li Discuss the method name before the method existence as a fact
            %li Discuss Code Style before implementation itself 
        %section
          %h2 Code Review Culture
          
          %ul
            %li Be Polite
            %li Admit good things
            %li 
              First things first
              %ul.fragment
                %li Reduce number of cycles
                %li Save Author's time
                %li Save Your time
        %section
          %h2 Boss control approach
          
          %p Ensure top points from the list are always performed
          %p Choose X things on top of the list to double-check and delegate the rest completely
          
        %section
          %h2 Top to Bottom Code Review 

          %ol
            %li 
              Architecture
              %ol
                %li Problem Solution
                %li Public APIs
                %li Database Schema
                %li Object Oriented Design
                %li Public Method Signatures
            %li.fragment 
              Implementation
              %ol
                %li Classes &amp; Methods 
                %li Views
                %li Test Coverage
                %li Code Style, Typos, Whitespace
    %script{:src => "http://lab.hakim.se/reveal-js/lib/js/head.min.js"}
    %script{:src => "https://rawgithub.com/hakimel/reveal.js/3.6.0/js/reveal.js"}
    :javascript
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      	controls: true,
      	progress: true,
      	history: true,
      	center: true,

      	theme: Reveal.getQueryHash().theme || 'simple', // available themes are in /css/theme
      	transition: Reveal.getQueryHash().transition || 'fade', // default/cube/page/concave/zoom/linear/fade/none

      	// Optional libraries used to extend on reveal.js
      	dependencies: [
      		// { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      		{ src: 'http://lab.hakim.se/reveal-js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      		{ src: 'http://lab.hakim.se/reveal-js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      		{ src: 'http://lab.hakim.se/reveal-js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'https://rawgithub.com/hakimel/reveal.js/3.6.0/plugin/notes/notes.js', async: true }
      		// { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      		// { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
      		// { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      	]
      });
